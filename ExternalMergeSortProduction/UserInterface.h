#pragma once
#include "Structures.h"
#include "ExternalMergeSort.h"

/*!
	\brief Класс пользовательского интерфейса.
	\author Alexander Filippov
	\date Ноябрь 2016 года

	Класс, отвечающий за взаимодействие пользователя с приложением, а также содержащий в себе некоторые методы, которые
	позволяют исследовать характеристики сортировки. Сообщает об ошибках и выводит результаты в консоль.
*/
class UserInterface
{
private:
	/*!
	\brief Указатель на экземпляр класса сортировки.

	Позволяет использовать методы внешней многофазной сортировки слиянием.
	*/
	ExternalMergeSort *sort;
	/*!
	\brief Константная строка меню.
	*/
	const string menu = "0. Выход\n1. Сгенерировать последовательность\n2. Задать параметры сортировки\n3. Отсоритровать последовательность\n4. Оценить характеристики сортировки\n5. Получение зависимостей\n";
	/*!
	\brief Константный массив, строк, расшифровывающих коды ошибок.
	*/
	const char *responceString[9] = { "Успешно", "Ошибка генерации", "Файл не существует", "Ошибка размера", "Ошибка файл-менеджера",
		"Исходный файл и файл результата совпадают", "Достигнут конец файла", "Ошибка выделения памяти", "Параметры не заданы или заданы неверно" };
	/*!
	\brief Вызов необходимого метода.
	\param[in] ch Выбор пользователя
	\return Булево значение - если true, то продолжаем работу программу, если нет, то выход из бесконечного цикла.
	
	Вызывает метод, получающий необходимые параметры для выбранной пользователем функциональности.
	*/
	bool callMethod(int ch);
	/*!
	\brief Вызов генерации последовательности.
	
	Получает необходимые параметры для генерации исходной последовательности. Оповещает о возникающих ошибках.
	*/
	void callGenerate();
	/*!
	\brief Вызов метода, задающего параметры сортировки.
	
	Задает параметр sort необходимым указателем на один из классов сортировки. Получает необходимые параметры сортировки. Оповещает о возникающих ошибках.
	*/
	void callSetParams();
	/*!
	\brief Вызов метода внешней сортировки.
	
	Вызывает необходимый метод сортировки, если это возможно. Оповещает о возникающих ошибках.
	*/
	void callSort();
	/*!
	\brief Вызов метода оценки характеристик внешней сортировки.
	
	Вызывает метод сортировки, если это возможно. Выводит отчет характеристик сортировки. Оповещает о возникающих ошибках.
	*/
	void callEstimate();
	/*!
	\brief Вызов метода получения зависимостей характеристик сортировки.
	
	Вызывает один из методов callGetDependenceSize(), callGetDependenceSizeOfSegments(), callGetDependenceType(). Оповещает о возникающих ошибках.
	*/
	void callGetDependencies();
	/*!
	Вызывает метод, создающий необходимый производный класс сортировки и задающий её параметры. 
	
	\brief Метод, задающий параметры сортировки.
	\param[in] file Указатель на класс FileManger, обеспечивающий взаимодействие приложения с файловой системой.
	\param[in] sizeOfSegments Размер сегментов.
	\param[in] type Tип внутренней сортировки.
	\return Код успеха или ошибки.
	*/
	Response setParams(FileManager *file, long long sizeOfSegments, TypeOfSort type);
	/*!
	\brief Вызов метода получения зависимостей характеристик сортировки от размера.
	
	Генерирует входные файлы разной длины. Вызывает несколько сортировок с разным размером входной последовательности. Получает зависимость характеристик от размера входной последовательности. Оповещает о возникающих ошибках.
	*/
	void callGetDependenceSize();
	/*!
	\brief Вызов метода получения зависимостей характеристик сортировки от размера сегментов.
	
	Генерирует тестовую последовательность. Вызывает несколько сортировок с разным размером сегментов. Получает зависимость характеристик от размера сегментов. Оповещает о возникающих ошибках.
	*/
	void callGetDependenceSizeOfSegments();
	/*!
	\brief Вызов метода получения зависимостей характеристик сортировки от типа внутренней сортировки.
	
	Генерирует тестовую последовательность. Вызывает несколько сортировок с разными типами внутренней сортировки. Получает зависимость характеристик от типа внутренней сортировки. Оповещает о возникающих ошибках.
	*/
	void callGetDependenceType();
	/*!
	\brief Функция проверки корректности ввода.

	Проверяет успешно ли считался запрашиваемый параметр, если нет, то просит повторить ввод.
	*/
	void matrixTime();
public:
	/*!
	\brief Инициализирует сессию взаимодействия с пользователем.
	
	Задает бесконечный цикл взаимодействия с пользователем, вызывает getMethod(). Завершается если getMethod() возвращает false.
	*/
	void initSession();
	/*!
	\brief Пустой конструктор класса.
	
	Обнуляет атрибуты.
	*/
	UserInterface();
	/*!
	\brief Деструктор класса.
	
	Освобождает выделенную память.
	*/
	~UserInterface();
};

